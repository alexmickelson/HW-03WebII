@model BlogPostModel

@{
    ViewData["Title"] = "Details";
}
@inject IAuthorizationService Authorization
@{
    var canEdit = (await Authorization.AuthorizeAsync(User, MyIdentityData.BlogPolicy_Edit)).Succeeded;
    var canDelete = (await Authorization.AuthorizeAsync(User, MyIdentityData.BlogPolicy_Delete)).Succeeded;
    var canAdd = (await Authorization.AuthorizeAsync(User, MyIdentityData.BlogPolicy_Add)).Succeeded;
}


<div>
    <div class="blogTitle">
        <h1>@Html.DisplayFor(model => model.Title)</h1>
        <h4>@Html.DisplayFor(model => model.Posted)</h4>

    </div>
    <hr />
    <div class="blogSummary basicText">
        @Html.DisplayFor(m => m.Summary)
    </div>
    <div class="blogBody basicText">
        @Html.DisplayFor(m => m.Body)
    </div>
</div>
<div class="flex-container">
    @if (canEdit)
    {
        <input type="button"
               value="Edit Post"
               class="btn btn-primary"
               onclick="location.href='@Url.Action("Edit", "BlogPost", new { id = Model.Id})'" />
    }
    @if (canDelete)
    {

        <input type="button"
               value="Delete Post"
               class="btn btn-primary"
               onclick="location.href='@Url.Action("Delete", "BlogPost", new { id = Model.Id})'" />
    }

        <input type="button"
               value="Back to Posts"
               class="btn btn-primary"
               onclick="location.href='@Url.Action("Index", "BlogPost")'" />
    
</div>

<div>
    <p>Tags:</p>
    @Html.Partial("_TagListView", Model.TagArray)
</div>
